#!/bin/bash

run_brew() {

    # Check for Homebrew
    if type_exists 'brew'; then
        e_header "Updating Homebrew..."
        # Use the latest version of Homebrew
        brew update
        [[ $? ]] && e_success "Done"

        e_header "Updating any existing Homebrew formulae..."
        # Upgrade any already-installed formulae
        brew upgrade
        [[ $? ]] && e_success "Done"

        e_header "Checking status of desired Homebrew formulae..."
        local list_formulae
        local -a missing_formulae
        local -a desired_formulae=(
            'coreutils' # GNU core utilities (those that come with OS X are outdated)
            'git'
            'ack'
            'bash'
            'bash-completion'
            'ffmpeg'
            'graphicsmagick'
            'jpeg'
            'node'
            'fnm'
            'optipng'
            'tree'
            'wget'
            'zsh'
            'zsh-completions'
            'zsh-autosuggestions'
            'gh'
            'mas'
            'postgresql'
            'grep'
            '1password-cli'
        )

        for index in ${!desired_formulae[*]}
        do
            if ! formula_exists ${desired_formulae[$index]}; then
                # Store the name (and options) of every missing formula
                missing_formulae=("${missing_formulae[@]}" "${desired_formulae[$index]}")
            fi
        done

        if [[ "$missing_formulae" ]]; then
            # Convert the array of missing formula into a list of space-separate strings
            list_formulae=$( printf "%s " "${missing_formulae[@]}" )

            e_header "Installing missing Homebrew formulae..."
            # Install all missing formulae
            brew install $list_formulae

            [[ $? ]] && e_success "Done"
        fi

        # use latest rsync rather than out-dated OS X rsync
        # install separately from the main formulae list to fix gh-19
        brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/master/Formula/rsync.rb

        # Install Homebrew casks
        e_header "Checking status of desired Homebrew casks..."
        local list_casks
        local -a missing_casks
        local -a desired_casks=(
            '1password'
            'iterm2'
            'docker'
            'visual-studio-code'
            'visual-studio-code@insiders'
            'notion'
            'obsidian'
            'imageoptim' # Changed from ImageOptim for consistency
            'raycast'
            'dropbox'
            'keycastr'
            'caffeine'
            'slack'
            'zoom'
            'hot'
            'pika'
            'loom'
            'rescuetime'
            'kap'
            'bruno'
            'rocket'
            'firefox'
            'google-chrome'
            'microsoft-edge'
            'discord'
            'chatgpt'
            'claude'
            'cursor'
            'figma'
        )

        for cask_name in ${desired_casks[*]}
        do
            if ! cask_exists $cask_name; then
                missing_casks+=("$cask_name")
            fi
        done

        if [[ ${#missing_casks[@]} -ne 0 ]]; then
            list_casks=$( printf "%s " "${missing_casks[@]}" )
            e_header "Installing missing Homebrew casks: $list_casks"
            brew install --cask $list_casks
            [[ $? ]] && e_success "Done"
        else
            e_success "All desired casks already installed."
        fi
        # Remove outdated versions from the Cellar
        brew cleanup
    else
        printf "\n"
        e_error "Error: Homebrew not found."
        printf "Aborting...\n"
        exit
    fi

}
